# Generated by Django 3.1.2 on 2021-07-28 15:46

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='PlanExecutionModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('pause_time', models.DateTimeField(blank=True, null=True)),
                ('finish_time', models.DateTimeField(blank=True, null=True)),
                ('state', models.TextField(default='PENDING')),
                ('aps_job_id', models.TextField(default=None, null=True)),
                ('evidence_dir', models.TextField(blank=True, null=True)),
                ('schedule_time', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'plan_execution',
            },
        ),
        migrations.CreateModel(
            name='PlanModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.TextField()),
                ('owner', models.TextField(blank=True, null=True)),
                ('evidence_dir', models.TextField(blank=True, null=True)),
                ('plan_dict', models.JSONField()),
            ],
            options={
                'db_table': 'plan_model',
            },
        ),
        migrations.CreateModel(
            name='PlanTemplateFileModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='uploads')),
            ],
        ),
        migrations.CreateModel(
            name='StageExecutionModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('pause_time', models.DateTimeField(blank=True, null=True)),
                ('finish_time', models.DateTimeField(blank=True, null=True)),
                ('state', models.TextField(default='PENDING')),
                ('aps_job_id', models.TextField(default=None, null=True)),
                ('schedule_time', models.DateTimeField(blank=True, null=True)),
                ('trigger_id', models.TextField(default=None, null=True)),
                ('plan_execution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stage_executions', to='cryton_rest_api.planexecutionmodel')),
            ],
            options={
                'db_table': 'stage_execution',
            },
        ),
        migrations.CreateModel(
            name='StageModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.TextField()),
                ('executor', models.TextField(blank=True, null=True)),
                ('trigger_type', models.TextField()),
                ('trigger_args', models.JSONField()),
                ('plan_model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stages', to='cryton_rest_api.planmodel')),
            ],
            options={
                'db_table': 'stage_model',
            },
        ),
        migrations.CreateModel(
            name='StepModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.TextField()),
                ('step_type', models.TextField(blank=False, null=False)),
                ('arguments', models.JSONField()),
                ('is_init', models.BooleanField(default=False)),
                ('is_final', models.BooleanField(default=False)),
                ('executor', models.TextField(blank=True, null=True)),
                ('output_prefix', models.TextField(default='')),
                ('stage_model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='steps', to='cryton_rest_api.stagemodel')),
            ],
            options={
                'db_table': 'step_model',
            },
        ),
        migrations.CreateModel(
            name='WorkerModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('address', models.TextField()),
                ('q_prefix', models.TextField()),
                ('state', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='SuccessorModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('succ_type', models.TextField(default='result')),
                ('succ_value', models.TextField(default='OK')),
                ('parent_step', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='successors', to='cryton_rest_api.stepmodel')),
                ('successor_step', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parents', to='cryton_rest_api.stepmodel')),
            ],
            options={
                'db_table': 'successor',
            },
        ),
        migrations.CreateModel(
            name='StepExecutionModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('pause_time', models.DateTimeField(blank=True, null=True)),
                ('finish_time', models.DateTimeField(blank=True, null=True)),
                ('state', models.TextField(default='PENDING')),
                ('result', models.TextField(blank=True, default='NONE', null=True)),
                ('std_out', models.TextField(blank=True, default='NONE', null=True)),
                ('std_err', models.TextField(blank=True, default='NONE', null=True)),
                ('mod_out', models.JSONField(blank=True, default=None, null=True)),
                ('mod_err', models.TextField(blank=True, default='NONE', null=True)),
                ('evidence_file', models.TextField(blank=True, default='NONE', null=True)),
                ('valid', models.BooleanField(default=False)),
                ('parent_id', models.IntegerField(default=None, null=True)),
                ('stage_execution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='step_executions', to='cryton_rest_api.stageexecutionmodel')),
                ('step_model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='step_executions', to='cryton_rest_api.stepmodel')),
            ],
            options={
                'db_table': 'step_execution',
            },
        ),
        migrations.AddField(
            model_name='stageexecutionmodel',
            name='stage_model',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stage_executions', to='cryton_rest_api.stagemodel'),
        ),
        migrations.CreateModel(
            name='SessionModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_name', models.TextField(blank=True, default=None, null=True)),
                ('session_id', models.TextField(default='0')),
                ('plan_execution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='namedsessionmodel', to='cryton_rest_api.planexecutionmodel')),
            ],
            options={
                'db_table': 'namedsessionmodel',
            },
        ),
        migrations.CreateModel(
            name='RunModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('pause_time', models.DateTimeField(blank=True, null=True)),
                ('finish_time', models.DateTimeField(blank=True, null=True)),
                ('state', models.TextField(default='PENDING')),
                ('aps_job_id', models.TextField(default=None, null=True)),
                ('schedule_time', models.DateTimeField(blank=True, null=True)),
                ('plan_model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='runs', to='cryton_rest_api.planmodel')),
            ],
            options={
                'db_table': 'run',
            },
        ),
        migrations.AddField(
            model_name='planexecutionmodel',
            name='plan_model',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='plan_executions', to='cryton_rest_api.planmodel'),
        ),
        migrations.AddField(
            model_name='planexecutionmodel',
            name='run',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='plan_executions', to='cryton_rest_api.runmodel'),
        ),
        migrations.AddField(
            model_name='planexecutionmodel',
            name='worker',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='plan_executions', to='cryton_rest_api.workermodel'),
        ),
        migrations.CreateModel(
            name='OutputMapping',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_from', models.TextField()),
                ('name_to', models.TextField()),
                ('step_model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='output_mappings', to='cryton_rest_api.stepmodel')),
            ],
        ),
        migrations.CreateModel(
            name='ExecutionVariableModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('value', models.TextField()),
                ('plan_execution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='execution_variables', to='cryton_rest_api.planexecutionmodel')),
            ],
        ),
        migrations.CreateModel(
            name='DependencyModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dependency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subjects_to', to='cryton_rest_api.stagemodel')),
                ('stage_model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dependencies', to='cryton_rest_api.stagemodel')),
            ],
        ),
        migrations.CreateModel(
            name='CorrelationEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('correlation_id', models.TextField()),
                ('worker_q_name', models.TextField(blank=True, null=True)),
                ('state', models.TextField(default='PENDING')),
                ('step_execution', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='correlation_events', to='cryton_rest_api.stepexecutionmodel')),
            ],
        ),
    ]
